# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  # bootstrap:
  #   docker:
  #     # specify the version you desire here
  #     - image: circleci/node:8.9.4

  #     # Specify service dependencies here if necessary
  #     # CircleCI maintains a library of pre-built images
  #     # documented at https://circleci.com/docs/2.0/circleci-images/
  #     # - image: circleci/redis:latest
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     # - run: echo 127.0.0.1 www.zendesk.com | sudo tee -a /etc/hosts
  #     # - run: sudo apt-get update
  #     # - run: sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
  #     # - run: if [ "$CIRCLE_BRANCH" = "master"  ]; then sudo npm install -g grunt-cli; fi
  #     # Download and cache dependencies
  #     - restore_cache:
  #         keys:
  #           - v1-dependencies-{{ checksum "package.json" }}
  #     - run: yarn install
  #     - run: case $CIRCLE_NODE_INDEX in 0) node scripts/generateTasks.js ;; esac
  #     - save_cache:
  #         paths:
  #           - node_modules
  #         key: v1-dependencies-{{ checksum "package.json" }}
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - .circleci
  bootstrap:
    docker:
      - image: circleci/node:8.9.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  apps:
    docker:
      - image: circleci/node:8.9.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: node scripts/jobvite.js $BUILD_PARAMS
      - run: node scripts/apps.js $BUILD_PARAMS
      - run: node scripts/uploadImages.js public/assets/images/p-apps-marketplace/apps/ $BUILD_PARAMS
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - public/assets/json/jobs.json
      #       - public/assets/json/jobs-search.json
      #       - wordpress/wp-content/themes/zendesk-twentyeleven/lib/apps.json

  build:
    docker:
      - image: circleci/node:8.9.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: node scripts/uploadImages.js public/assets/images/ $BUILD_PARAMS
      - run: sudo npm install -g grunt-cli
      - run: grunt zendesk-dist $BUILD_PARAMS
      - run: node scripts/uploadDisted.js $BUILD_PARAMS

  generate:
    docker:
      - image: circleci/node:8.9.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: node scripts/mapper.js zen en $BUILD_PARAMS
      - run: node scripts/mapper.js zen ja $BUILD_PARAMS
      - run: node scripts/mapper.js zen rl $BUILD_PARAMS
      - run: node scripts/mapper.js zen en $BUILD_PARAMS
      - run: node scripts/compiler.js zen en $BUILD_PARAMS
      - run: node scripts/compiler.js zen ja $BUILD_PARAMS
      - run: node scripts/compiler.js zen rl $BUILD_PARAMS
      - run: node scripts/compiler.js zen en $BUILD_PARAMS
      - run: node scripts/critical.js $BUILD_PARAMS
      - persist_to_workspace:
          root: .
          paths:
            - public/sites #might improve here if too long

  test:
    docker:
      - image: circleci/node:8.9.4-browsers
      - image: circleci/redis:latest
    working_directory: ~/repo
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: mkdir -p /tmp/test-results
      - run: echo 127.0.0.1 www.zendesk.com | sudo tee -a /etc/hosts
      - run:
          name: Tests unit
          command: if [ "$CIRCLE_NODE_INDEX" = 0  ]; then TESTFILES=$(circleci tests glob "test/unit/**/*.js") && yarn run t ${TESTFILES}; fi
      - run:
          name: Tests acceptance
          command: TESTFILES=$(circleci tests glob "test/acceptance/**/*.js" | circleci tests split --split-by=timings) && yarn run t ${TESTFILES} --parallel
      - store_test_results:
          path: /tmp/test-results

  deploy:
    docker:
      - image: circleci/node:8.9.4
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: node .circleci/deploy.js $BUILD_PARAMS

workflows:
  version: 2
  # TODO: - check if schduled build start before timer after a push
  #       - check if custom branches workflows can be triggered by
  #         duplicating hourly workflow without shedule
  #         but adding cutom branch name to filters
  #
  # hourly-AM:
  #   triggers:
  #     - schedule:
  #         # LA working hours: 8.59-11.59 weekdays
  #         # cron: "59 15-18 * * 1-5"
  #         # UTC time
  #         cron: "59 7-10 * * 1-5"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - bootstrap
  #     - generateA:
  #         requires:
  #           - bootstrap
  #     - generateB:
  #         requires:
  #           - bootstrap
  #     - list:
  #         requires:
  #           - generateA
  #           # - generateB

  # hourly-PM:
  #   triggers:
  #     - schedule:
  #         # LA working hours: 13.59-16.59 weekdays
  #         # cron: "59 20-23 * * 1-5"
  #         # UTC time
  #         cron: "59 12-16 * * 1-5"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - bootstrap
  #     - generateA:
  #         requires:
  #           - bootstrap
  #     - generateB:
  #         requires:
  #           - bootstrap
  #     - list:
  #         requires:
  #           - generateA
  #           # - generateB

  # daily:
  #   triggers:
  #     - schedule:
  #         # UTC time, matches 3AM weekdays LA time
  #         cron: "0 10 * * 1-5"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - build
  generate-and-list:
    jobs:
      - bootstrap:
          context: mirror
          filters:
            branches:
              only:
                - master
                - /.*mp$/
      - apps:
          context: mirror
          requires:
            - bootstrap
      - build:
          context: mirror
          requires:
            - bootstrap
      - generate:
          context: mirror
          requires:
            - build
      - tests:
          context: mirror
          requires:
            - generate
      - deploy:
          context: mirror
          requires:
            - tests